
// File: contracts/manifold/ERC721Creator.sol
// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

/// @author: manifold.xyz

import "@openzeppelin/contracts/proxy/Proxy.sol";
import "@openzeppelin/contracts/utils/Address.sol";
import "@openzeppelin/contracts/utils/StorageSlot.sol";

contract ERC721Creator is Proxy {
    
    constructor(string memory name, string memory symbol) {
        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256("eip1967.proxy.implementation")) - 1));
        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6;
        (bool success, ) = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6.delegatecall(abi.encodeWithSignature("initialize(string,string)", name, symbol));
        require(success, "Initialization failed");
    }
        
    /**
     * @dev Storage slot with the address of the current implementation.
     * This is the keccak-256 hash of "eip1967.proxy.implementation" subtracted by 1, and is
     * validated in the constructor.
     */
    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;

    /**
     * @dev Returns the current implementation address.
     */
     function implementation() public view returns (address) {
        return _implementation();
    }

    function _implementation() internal override view returns (address) {
        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;
    }    

}


// File: contracts/sean.sol
// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

/// @title: seanseallors
/// @author: manifold.xyz

import "./manifold/ERC721Creator.sol";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                                                                                                                                                                                                                    //
//                                                                                                                                                                                                                                                                                                                    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWNNNXXXXKKKK00000000000000000000000KKKKXXXXXXNNNNNWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWWNXXKK00OOOkkkkkkkkkkkkkkkkOOOOOOOOOOOOO0O00000000KKKKKKKKXXXXXXNNNWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWNXXK0OOOkkxxxxxxxxxxkkkkkkkxkkkkkkkkkkOOOOOOOOOOOOOO000000000000KKKKKKKKXXXXXXNNNNNWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXK0OkkxxxxxxxxxxxxxxxxxxxkkkkkkkkkkkkkkkOOOOOOkO000O0000000000000000000KKKKKKKKKKKXXXXXXXNNNNWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXK0OkxdddddddxxxxxxxxxxxxxxxkkkkkkkkkkOOOOOOOOOOOO0OxkKXK0000KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKXXXXXXXXNNNNWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWWXK0OxddddddddddddddxxxxxxxxxxxkkkkkkkkkOOOOOOOOOOOO0000OxoxXWNK0KKKKKKKKKXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXNNNNWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNK0OxdooooddddddddddddxxxxxxxxxxkkkkkkkkkkkOOOOOOOOOOOO0000OxccxXWWNK00KKKKKKXXXXXXXXXXNNNNNNNNNNNNNNNNNNNNNNXXXXXXXXNNNNNWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOkdooooooooddddddddddxxxxxxxxxxkkkkkkkkkkkkkOOOOOOOOOOOOOOOOOxl:cxNMMWX0000000KKKKKKXXXXXXXXNNNNWWWWWWWWWWWWWWWWWWNNNNNNNNXXNNNNWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOkdoooooooooodddddddddddxxxxxxxxxkkkkkkkkkkkkkkkkkkkkkkkkkkOkkOOxl;;cxNMMWWXOOOOOOOOO00000KKKKKXXXXXNNNNWWWWWWWWWWWWWWWWWWWWWNNNNNNNNNNWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0kdollloooooooodddddddddxxxxxxxxxxxxxkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkxc;,;cxNMMWMWKkkkkkkkkkOOOOOOO0000KKKKXXXXNNNWWWWWWWWWWWWWWWWWWWWWWWNNNNNNNWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOxollllloooooooodddddddxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdl;,;;ckNMMMWWN0kxxkxxxkkkkkkkkkkOOOOO000KKKKXXXNNNWWWWWWWWWWWWWWWWWWWWWWWWNNNNWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0kdllllllloooooooddddddddxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxddxxdl;,,;:cxNMMMWWWNOxxxxxxxxxxxxxxxxkkkkkkkOOOO000KKKXXXXNNWWWWWWMMWMMWMWWWWWWWWWWNNNWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0kollllllllooooooddddddddddxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdddddddddddddddddddl;,,;;:cxXWMMMWWWXkxxxxxxxxxxxxxxxxxxxxxxxkkkkOOOO0000KKKXXNNWWWWWMMWWWWWWWWWWWWWWWWNNWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0kolccclllllloooooddddddddddxxxxxxxxxxxxxxxxxxxxxxxxdddddddddddddddddddddddddo:,,,;:::dXWWMMWWWWKkddddddxxxxxxxxxxxxxxxxxxxxxxkkkkOOO0000KKXXNNNWWWWWWWWWMMWWWWMWWWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKkolccccclllloooooodddddddddxxxxxxxxxddxkxxdddddddddddddddddddddddddddddddddddddc,,,;;::coKWWWWWMWWWKkddddddddddddddddddddxddxxxxxxxxxkkkkkk0KK0KKXXXNNWWWWWMWWMMWWWMMWWWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOdlcccccllllloooooddddddddddddddddddddddllk0Okdddddddddddddddddddddddddddddddddddc;,,,;::cco0NNWWWMMWWW0xdddddddddddddddddddddddddddxxxxxxxddxKNKOOO00KKXXXNNWWWWWWWWWWWWWWWWWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNKxlccccccllllloooooddddddddddddddddddddddddl:lOXX0kddddddddddddddddddddddddddddddddl;,,,;;:cccoOXXNWWWWWWWN0xdddddddddddddddddddddddddddddddolod0WNOxkkkOOO00KKXXNNWWWMWWWWWWWWWWWWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOdcc:ccccclllloooooddddddddddddddddddddddddddc;;lONNX0kdddddddddddddddddddddddddddddo:,,,;;::cccoOKKXWWWWMWWWNOxddddddddddddddddddddddddddddolcldONWNOxxxxxkkkOOO0KKXXNNWWWWMMWWWWWWWWMWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXkoc::cccccllloooooodddddddddddddddddddddddddddoc,,:o0NWWX0kddddddddddddddddddddddddddo:,,,,;::ccccoOKKKNWWMMWWWWXOddddddddddddddddddddddddddoc::coONWWXOxxxxxxxxxxkkOO00KKXXNWWWWWWWWWWWMWWMWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKxl:::cccccllllooooddddddddddddddddddddddddddddddo:'',:xXWWWWX0kdddddddddddddddddddddddoc,,,;;;::ccccoOKKKXNWWWWWMWWXkxddddddddddddddddddddddlc:::coOXWWWXOxdddddxxxxxxxkkkOO00KXXNWWWWWWWMMMWWWMMWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0dc:::cccccllllooooodddddddddddddddddddddddddddddddo:'',;ckNWWWWWN0kdddddddddddddddddddddc,,,;;;::cccccoOKKKKXNWWWWWWWWKkxxxxxxddddddddddddddlc:;::clkXWWWNXOxxddddxxxxxxxxxxxkkkO00KXXNWWWWWWWWMMWWWWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0dc::::cccclllloooodddddddddddddddddddddddddddddddddddc'.',;lONWWWWWWN0kxdddddddddddddddddl;,,,;::::cccccokKKKKKXNWWWMWWWWKkxxxxxxxxxddddddddoc:;;::cldKWWWNXKOddddddddddddxxxxxxxxkkOO00KXNNWWWMWWMWWMWWMMWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0dc:::::ccccllloooooodddddddddddddddddddddddddddddddddddc'.'',;l0WWWWWWWWNKkxddddddddddddddl;,,,;;:::ccccccok00KKKKXNWWWWMWWWKxxxxxxxxxxdddddol:;;:::ccokNWWNXXKOdddddddddddddddddxxxxxxkkOO0KKXNWWWWWWWMWWWMMMWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKdc;;::::cccllllloooooodddddddddddddddddddddddddddddddddddc'..',;:o0WWWWWMWWWNKkxdddddddddddo:,,,,;::cccccccclk00KKKKKXNWMWWMWWN0xxxxxxxxxxddol::;:::::clxKNNNNXXKOddddddddddddddddddxxxxxxxkkkO00KXNNWWWMWWMMMMMMWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKxc;;::::cclllllooooooooddddddddddddddddddddddddddddddddddddc'..',,;:o0NWMWWWMWWWNKkxdddddddddc,,,,;;::cccccccclkK00KKKKKXNWMWMMWWNOxxxxxxxxdol:::::::::ccoOXNNNXXXKOxxxddddddddddddddddxxxxxxxxkkkOO0KXXNWWWWMWWWNXXWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXkc;;;::::cccldxxddoooooddddddddddddddddddddddddddddddddddddddc'..',,;:cd0XNWWWWMWWWWNKkxddddddl;,,;;;::ccccccccclkKK0KKKKKKXWWWWMWWWNOxxxxxdol::::::::cccclkKXXNNXXXKOxxxxxdxxxddddddddddddddxxxxxxxkkkO00KXNNXK0Okk0XWWWMWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOl;;;;::::cccc::lxO0OOkkxddddddddddddddddddddddddddddddddddddddl,..'',;::cd0KXNWWWMWWWWWNKkxdddo:;;;;;:::ccccccccclk0000KKKKKXNWWWWMMMWXkxxddlc:::::::ccccclx0KXXNNXXXKOxddddddddxxxxxxxxddddddddddxxxxxkkkkkkxdoodxOXNWWWMWMMWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKd:;;;;:::ccclllc;,;lx0KXXXK0Okxxddddddddddddddddddddddddddddddddl,..'',;;::lx0KKXNWWWWMMWWWN0kdoc:::;:::::ccccccccclk000KKKKKKKXNWWMMWWMWXkdolcc:cccccccccccdO0KXXNNXXXKOxxxxdddddddxxxxxxxxxxxxxddddddddoollcccldk0XNNNWWMWWMMWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNkc;;;;::::ccclloooc,'';lk0XXNNNNXK0OOkxxddddddddddddddddddddddddddl,..'',;;::clx00KKXNWWMMWWWWNXklccc:::::::ccccccccclk00KKKKKKKKKXNWWMMMMMWKdllcccccccccccccoO00KXXNNXXXXOxxxxxxxxddddxdddxxddxxxxdddoollccc::cldk0XWNXXNWMMWMMWWWMWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMW0o;,;;;;:::ccllloooooc'..,:okKXNWWWNNNNXK00Okxddddddddddddddddddddddl,..'',;;::cclk000KKXNWWWWMWN0dllccc:cccccccccccccclk000KKKKKKKKKKXNWWWWWWW0dlcclcccccccccok000KXNNNXXXXOxxxxxxxxxdddddxxddddddoolllccccccccloxOXWNXKKKNWWWWMWWWWWWWWWWWWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMNx:,,;;;:::ccclllooooodo;...',:oOXNWWWWWWWNNNNXK0Okkxdddddddddddddddddl,.'',,;;:::ccok0000KKKXNNNNKxlllccc:cccccccccccccclk00K000KKKKKKKKKXNNNNNNXkllllcccccccclx0000KXNNNNNNX0xxdxxdddddxxxddddoollcccccccccccclldkKNNXKK000KXNWWWWWWWWWMMWWWNNWWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMWKo;,,;;;:::ccclllooooooddl,....',:dOXNWWWWWWWWWWNNNNXK00kxxddddddddddddl;'',,;;;::ccccok0000000KKK0xlccccccc:ccccccccccccclx0000000KKKKKKKKKKKKXXXX0xlccccccccclxO0000KXNNWNNNN0xxxxddddddddoollcccccccccccccccllodOKXXKK00OOO0KXXNWWWWWMMWWWMWWWNNWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMNkc,,,;;;:::ccclloooooodddddl,....',;cdOKNNWWWWMWWWWWWWNNNNXK0Okkxdddddddo:,,,;;;::::ccccdO00000000Odlccccccc:::cccccccccccclk000000KKKKKK0KKKKKKKKKKKOdcccccccccdO00000KXNWWWWWW0xdxxddddollcccccccccclcccccccllldk0KKKK000OkkkOO0KXNNWWWMWWWMMMWWWNNWWWMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMXd;,,,;;;:::ccclloooooooddddddc'....'',;cok0KXXNNWWWWWWWWWWWWNNNXXK0Okxdddo:;;;;;:::::cccccdO000000Oxlcccccccc:::cc::cccccccclk000000KKKKKK00000KKKKKKK0OocccccccoO000000KKNWWWWMWKxdddoollccccccccccllccccccclllok0KKKKK000OkxxxkkOO0KXNWWWMWWWWWWWWWWNNWWMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMW0l,,,;;;;:::ccclloooooooddddddddc'....',,;:cok00KKKXXNNWWWWWWWWWWWNNNXXK0kkdlc:::::::::::ccclxO0000Oxlcccccccccc::ccc:cccccccclx000000KKKKK0000000KK0KKKK0klcccccok0000000KKXNWWWWN0xdoollllcccccccllllccccccccloxO0KKKKK000OkxxxxxxkkO0KXXNWWMWWMMWMWWWWNNWWWMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMWOc,,,;;;:::ccclllooooooooddddddddo:.....',,;;:coxO0000KKKXXNNWWWWMWWWWNNXXKK0Okxdolcccc:::::cclxO000klccccccccccc::ccc:cccccccclx000000K000K0000000KKKKKKKK0xlccclx0000000000OOO00KKOkddolllccccclllllcccccccccoxO00KKKKK000OkxddxxxxxkkkO0KXNWWWMMWWWWMWWWNNWWWMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMNk:,,,,;;:::ccclllooooodddddddddddddo:.....',,;;::coxO0O00000KKKXXNNWWWWWNNXXKK0000OOkxdolcc::ccclkO0koc:cccccccccc::cc::cccccccclx000000K00KK000000KKKKKKKKKK0xcclxO0000OOkxdolllodxxxddoolllcclllllccccccccccoxO0000KKKKK000OxddddddxxxxkkO0KXXNWWWWWWWWMWWWWNNWWMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMXd;,,,,;;;::ccclllooooodddddddddddddddo:.....',,;;:::coxOOOO0000000KKKXXXXXXKKKK000000000OOkxdolcccokOdc::ccccccccccc::cc:cccccccccx000000K00KKKKKKKKKKKKKKKKKKK0dldOOOkxdollcccccllllllllllllcclllcccc::ccccclxO0000KKKKKK000OkxdddddddxxxxxkkO0KXNWWWMMMWMMWWWNNNNWWMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMXo,',,,;;;::ccclllooooodddddddddddddddddo;.....',;;;::::coxOOOO00000000000000000000000000000000OOkxdoddlc::ccccccc:ccc::cc::::ccccccx000000K0000KKKKKKKKKKKKKKKKKKOddddollcccccccccccccccccccccccccccc::ccccclxO000000KKKKK000OkxdddddddddxxxxxkkO0KXNWWWMMWWWMWWWNNNNWWMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMKl,',,,;;;::ccclllooooddddddddddddddddddddo;.....',;;::::::coxOO00000000000000000000000000000000000000Oxlc:::c::cc:cc:::::c:::::cccccx00000000000KK00KKKKKK0KKKKK00OdlccccccccccccccccccccccccccccccccccccccldO0000000KKKKK000OkxdddddddddddddxxxxkOO0KXNWWMWWWMWWWNNNNNNWWMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMKl,',,,;;;::ccclllooodddddddddddddddddddddddl,.....',;;:::::::coxO00000000000000000000000000000000000000Odc:::cccc::cc:::::::::::cccccx000000000000K00KKKKK000KKK00Odlcccccccccccccccccccccccccccccc::cccccldO00000000KKKKK000OkxdddddddddddddddxxxxkkO0KXNWWWWMMMMWWNNXXNNNWMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMKl'',,,,;;::ccclllooooddddddddddddddddddddddddl'....'',;;;:::::::coxO0000000000000000000000000000000000000Ooc::cc:cc:cc::::::::::ccccccx00000000000KK000KKKK000KKK0Odlcccccccccccccccccccccccccccc::ccccccldO0000000000KKKKK00OOxxdddddddddddddddddxxxkkO0KXNWWWMWWMMWWWNXXXNNWMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMKl''',,,;;:::cclllooooddddddddddddddddddddddddddc'....'',,;;::::::::coxO000000000000000000000000000000000000ko::::::cccc:::::::::::cccccxO0000000000KK000KK000000K00xlccccccccccccccccccccccccccc:::cccccldO0000000000KKKKKK000OkxddddddddddddddddddxxxxkkO0KXNWWWWWWMWWWWNXXXNNWMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMXl,'',,,;;:::ccllloooodddddddddddddddddddddddddddo:....'',,;;;;::::::::clxO00000000000000000000000000000000000kl::c::ccccc::::::::::cccccdO0000000000KK000KKKK000000klccccccccccccccc::cccccccc:::ccccccldk00000000000KKKKKK000OkxdddddddddddddddddddxxxxxkkOO0XNNWWWWWWWWWNNXXXXNWMMMMMMMMMMMMM    //
//    MMMMMMMMMMMXo,'',,,;;;::ccclloooooodddddddddddddddddddddddddddo;....'',,;;;;:::::::::clxO000000000000000000000000000000000Oxc:c:::::::::::::::::cccccdO00000000000KK00KK0K00000kocccccccccccccc::cccccccc::::cccccldk000000000000KKKKKKK000kxxddddddddddddddddddddxxxxxkkOO0XNNWWWWWMWWWNXXKXNNWMMMMMMMMMMMM    //
//    MMMMMMMMMMNd,''',,,;;::ccclllooooooddddddddddddddddddddddddddddo;....'',;;;;;;:::::::::clxO00000000000000000000000000000000Odc::::::::::::::::::::cccdO00000000000KK00000KK000Oocccccccccccccccccccccc:::::ccc:cldk0000000000000KKKKKKKKK0OxxxxdddddddddddddddddddddxxxxxkOO0KNNWWWWWMWWWNXKKXXNWMMMMMMMMMMM    //
//    MMMMMMMMMWk;''',,,;;::ccclllooooddddddddddddddddddddddddddddddddl;...'',,;;:::;;:::::::::clxO0000000000000000000000000000000Odc:::::::::::::::::::cccdO0000000000000KK00KK000Odcccccccccccc:ccccccccc:::cccccccdk00000000000000KKKKXXXXXK0kxxxxxxdddddddddddddddddddddxxxkkOO0KXNWWWWWWWWWNXKKXXNWMMMMMMMMMM    //
//    MMMMMMMMWO;.''',,;;:::cclllooooodddddddddddddddddddddddddddddddddl;'''',,;;;::::::::::::::::ldO000000000000000000000000000000Ooc::::::::::::::::::cccdO0000000000000KK00K0000xlccccccccc:::cccccccc:::cccccccdk0000000000000000KKKXXNNNNKOxdxddxdddddddddddddddddddddddxxxkkOO0KXNWWWWWWWWNXKKKXXNWMMMMMMMMM    //
//    MMMMMMMMKc..'',,,;;::cccllooooooodddddddddddddddddddddddddddddddddl,'',,;;;;::::::::::::::::::ldk00000000000000000000000000000koc::::::::::::::::::ccdO00000000000000000KK00klcccccccc:::ccccccc:::::ccc::cok000000000000000000KKXNNWWWN0xdddddddddddddddddddddddddddddxxxxxkkO0KNWWWWWWWWWNXKKKXXNWMMMMMMMM    //
//    MMMMMMMNo'.''',,;;::cccllloooodoodddddddddddddddddddddddddddddddddoc,,,;;;:::::::::::;;:::::::::ldO0000000000000000000000000000kl::::::::;;::::::::ccdO000000000000000KKK00koccccccc:::cccccc::::::ccc:ccokO0000000000000000000KKXNWWWWNOxxxddddddooooooodooodddddddddddxxxxkO0KKXNWWWWWWWWWNXKKKXXNMMMMMMMM    //
//    MMMMMMWx,.''',,;;;::ccllloollooddxxkkkkOOOOOOOOOOO00000000OOOOOkkkxdc;;;;;:::::::::::::;::::::::::ldkO00000000000000000000000000xl::::::::;:::::::::cdO0000000000000000K00Ooccccc:::ccccccc::::::ccc::cokO0000000000000000000000KKNWWWWNKOkxddoooooooooooooooddddddddxxxkkO0KKK00KXNWWWWWWWWNXKKKKXXWMMMMMMM    //
//    MMMMMM0:..''',,;;::ccclloool:;;:cldxkOO0000KKKKKKKKKKKKKKKKKK0000OOOxc;;;::::::::::::::::;::::::::::ldkO000000000000000000000000Oxl:::::::::::::::::cdO000000000000000000Odccccc::ccccccc::::::ccc::cokO0000000000000000000000000KKNWNXKK0OxxdddooooodddddddddddxkkO00KKKXXK0OkkO0KXNWWWWWWWWNXKKKKXNWMMMMMM    //
//    MMMMMNo'..'',,;;::cccllooooool:,'',;cldxkO000KKKKKKKKKKKKKKKKKKK0000Oxc;:::::::::::::::::::;;:::::::::ldkO00000000000000000000000Oxc::::::;:::::::::cdkO00000000000000000xlccc:::ccccccc::::::c:::cokO000000000000000000000000000KKKKOxxkkxxxdddddddddddddddddxk0KXXXXXK00OkxxxkkO0KXNWWWWWWWNXKKKKXXNMMMMMM    //
//    MMMMWk,..''',,;;::ccllloooooddol;'...',;:loxkO00KKKKKKKKKKKKKKK000000Oxc::::::::::::::::::::::::::::::::ldkO0000000000000000000000Odc:::::;:::::::::cdkO0000000000000000xlcc:::ccccccc:::::cc:::coxO000000000000000000000000000000K0koooooodddddddoooooooodxxk0KKKK00OOkkxxddxxxkkO0KXNWWWWWWNNXKKKKKXWMMMMM    //
//    MMMMKc...'',,;;::cccllooooodddddol;......',;:lodxOO0000000000000000OOOOdc::;;::::::::::::::::::;;:::::::::cdkO000000000000000000000Oo:::::;:::::::::cdkO000000000000000klcc:cccccccc:::::cc:::coxO000000000000000000000000000000000kolllllooolllllllloodxkO00000OOkkxxxxddddddxxkkOO0KXNWWWWWWNXKKKKKXNWMMMM    //
//    MMMWx'...'',,;;::cclllooooodddddddol;......'',,;:clodxkOOOOOOOOOOOOOOOOkdc::;::;::::::::::::::::::;:::::::::cdkO00000000000000000000ko::::;;:::::::::okO00000000000000ko:::cccccc::::::ccc::coxO0000000000000000000000000000000000kdllllllllllllloddxkO000000OOkkxxxxdddddddddxxxkkO00KXNWWWWWNNXK0KKKXNMMMM    //
//    MMMK:...'',,;;::ccclloooooodddddddddol;'......',,,;;::clodxkOOOOOOOOOOOOkoc::::;;;::::::::::::::::::;:::::::::cdkO0000000000000000000kl:::;;;::::::::okO0000000000000Ooc::ccccc::::::ccc::coxO00000000000000000000000000000000000OdllllllllllodxkO00000000OOOkkxxxxddddddddddddxxxkkO0KXNNWWWWNNXK00KKKNWMMM    //
//    MMWx'...'',,;;::ccllloooooddddddddddddol:'......'',,;;;;::cloddxkOOOOOOOOko:::::;;;;::::::::::::::::::::::::::::cokO000000000000000000xc::;;;::::::::okO000000000000Odc:ccccc::::::ccc::coxO000000000000000000000000000000000000OdllllllodxxkO0000000000OOOkkxxxxdddddddddddddddxxxkkO0KXNNWWWNNXK000KKXNMMM    //
//    MMKc....'',,;;::ccllooooodddddddddoddddddl:'......'',,,;;;:::::cloddxkOOOOxl::::::;;;;;;:::::::::::::::::;::::::::cokOOO00000000000000Oxc:;;;::::::::okO000000000000xlcccc::::::::c:::clxO0000000000000000000000000000000000000OxoloddxkO0000000000000OOOkkxxxxxdddddddddddddddddxxkkO00KXNNWWNNXXK000KKXWMM    //
//    MWk,...'',,;;::ccclloooooodddddddooddddddddo:'......'',,,;;:::::::::cloodxkxl::::::::;;;;:::::::::::::::::::::::::::cokO000000000000000Odc;;;::::::::okO00000000000klcc:::::::::c:::clxO00000000000000000000000000000000000000OkdxkOO0000000000000000OOkkkxxxxdddddddddddddddddddxxxkkO0KXXNNNNNXXK0000KKNMM    //
//    MXl....'',,;;::ccllooooododdddddoooddddddddddo:'......'',,,;;;:::::::::::clddlcc:::::::;;;::::::::::::::::::::::::::::cokO00000000000000Oo:;;::::::::oxO0000000000kocc:::::::::::::lxO00000000000000000000000000000000000OOkkxdodxkkO0000000000000000OOkkxxxddddddddddddddddddddddxxkkOO0KXXNNNNNXK00000KXWM    //
//    M0;....'',,;;::cclloooooooodddddoooddddddddddddo:'.....'',,,;;;;;;::::clodxkOOkxdollc:::::;:::::::::::::::::::::::::::::cokO0000000000000ko:;::::::::oxO000000000Ooc:::::::::::::lxO00000000000000000000000000000000OOkxddoollllllloodxkkO000000KKK000OOkxxdddddddddddddddddddddddxxxkkO00KXXNNNXXK0OO00KXWM    //
//    Wx'....'',,;:::clllooooooooddddooooddddddddddddddl;'....'',;;;;;::codxkOOOOOOOOOOOOkxddocc::;:::::::::::::::::::::::::::::coxO000000000000kl:::::::::lxO00000000Odc:::::::c::::ldO00000000000000000000000000000OOkkxdolllllllllllllllllllodxkO0KKKKKKK0kxddddddddddddddddddddddddddxxkkOO0KKXXXXXXK00O00KKNM    //
//    Xc....'',,;;::cclllooooooooddoooooddddddddddddddddol:'..'',,;clodkOOOOOOOOOOOOOOOOOOO0OOkxdolc::::::::::::::::::::::::::::::coxO00000000000xc::::::::lxk0000000Odc:::::::::::ldO000000000000000000000000000OOkxddolllllllllllllllllllllllllloodkO0KXK0kddddddddddddddddddddddddddddxxxkkO00KXXXXXKKK0OO00KXW    //
//    0;....'',,;;::ccllooooooodddooooooddddddddddddddddddol:,,;cldxkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOkxdolc:::::::::::::::::::::::::::coxO000000000Oxc:::::::lxk0000000xc::;:::::::ldO000000000000000000000000OOkxddolllllllllllllllllllllllllllllllllodxkOOkxddddddddddddddddddddddddddddddxxxkOO0KKXXXXKKK0OOO00KW    //
//    k'....'',,;;::ccllloooooddddoooooddddddddddddddddddddoolodxxkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOkxdolcc:::::::::::::::::::::::coxO00000000Odc::::::lxk000000kl:;;::::::ldO0000000000000000000000OkxxdollllllllllllllllllllllllllllllllllllllodxO000OkxddddddddddddddddddddddddddddxxxkkO00KKXXXKK00OOO00KN    //
//    o.....'',,;;:cccllloooooddddoooodddddddddddddddddddddddxxxkkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO0OOkxdolcc::::::::::::::::::::coxO0000000Od:;::::lxk00000ko::::::::cdk0000000000000000000OOkxdollllllllllllllllllllllllllclllllllllllllllllodk0XXK0kxdddddddddddddddddddddddddddxxxkkOO0KKKKKKK00OOO000X    //
//    c.....'',,;::cclllooooooddooooooddddddddddddxxxkkkkkkkkkkkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO00OOkxdoolc:::::::::::::::::coxO000000Oo:::::lxk0000Oo:::c:::cdk0000000000000000OOkxdoollllllllllllllllllllllllllllllcllllllllllllllllllodk0KXK0OkxxdddddddddddddddddddddddddxxxkkO00KKKKKK00OOOO00X    //
//    ;.....'',;;::cclllooooooddooooddddddddddxxkkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO000000000000Okxdolc:::::::::::::::coxO00000kl::::lxk000Odc:::::cdk00000000000000OkxddollllllllllllllllllllllllllllllllllllllllllllllllllllllloodxO0000OOkxxxdddddddddddddddddddddxxxkkOO00KKKKK00OOOOO0K    //
//    ,.....'',;;::ccllloooooddooooodddddxxkkkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000OOOkxdolcc:::::::::::coxO0000kl:;;ldk00Oxl::::cok0000000000OOkxxdollllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllooodxkkOOOOOOkkxxddddddddddddddddddxxkkOO00KKKK00OOOOOOOK    //
//    ......',,;;::ccllloooooooooodddxxkkkkOOOOOOOOO00OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO000000000000000000Okxdolcc::::::::coxOO0Oxc;;ldk00koc::cdkO0000000OOkxdoollllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllloodxxkkOOOOkkxxxddddddodddddddxxkkOO0000K000OOkkOOO0    //
//    ......',,;;:ccclllooooodddxxxkkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO00000000000000000000000000Okxdolc::::::clxOOOdc;cok0koc:cok000000OkxdoolllllllllllllllllllllllllllllllllllllcclccccccccccccllllllccccllllllllllllllllllooddxxkkkkkkkkxxddddoooddddxxkkOO000000OOOkkkOOO    //
//    ......',,;;::ccllloodxxxkkkkkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO00OOOOO000OOO0000000000000000000000000000000Okxdolc:::cldOOd:coxOoccok000OkxxdolllllllllllllllllllllllllccllcccccllllllllllllllllllllllllllllllllllllllllllllllllllllllloooddxxkkkOOkkkxxxxddddddxxkkO000000OOkkkkOO    //
//    ......',,;;::cllodxxkkkkkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO000000000OOOOOOOO0000000000000000000000000000000OkxdolccldkoloxdlokOOkxdolllllllllllllllllllllcclclllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllooddxxkkkkOOOOkkkxxxddddxkkOOOOOkkkkOO    //
//    ......',,;:cloodxxxkkkkkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO000000000O000000000000000000000000000000000000000000000000000000OkxdoddoloodxdoollllllllllllllllllllllllllllllllllllllllllollllllllllloooooooooooooooooooooooooooooooooooooddddddddddddddddddxxxkkO00KKK000OOkkkkkkkOOOOkkkkOO    //
//    ......',;::cccccllloooodddddddxxxxxxxxxxxxxxddddddxxxxxxxxxxxxddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddoooooooodddolodddxxxxxxxxxxxxxxxxxxxxxkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOkkkkOOO0000OkkkkkkO    //
//    ......'''''.......''''',,,,,,;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::clodxxdodoodxdddxkkOO0OOOOOO0OOOO00000O00000OOOOOOOOO0000OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO0000OOO00000000OO0OOOOOOOOOOOOOOOkkkkxxxddddooooooddxkOOOOOOOkkkkkkO    //
//    .......',,,,,,'............'''',,,,,,;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::clodxkOkxlldxdllkkxolllodxkkOOOOOOOOO0OOOOOO00OOO00OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO000000000OOOOOOOOOOOOOOOOOOOkkkkxxxdddooolllllloddxkkOOOOOOOkkkkkkkO    //
//    .......',,;;:cc::;,'.............'''',,,,,,;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::::::::::::::::::;;:::::;;:;;::::;;;;;;;:::;::::::::::clodxkOO0Okxlccdkxdl:ok0kdolccllloddkkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOkkkkxxxdddooollllcllloddxxxkkkOOOOOOkkkxkkkkO    //
//    .......',,;;:cclllollc:,'.............'''',,,,,,;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::;;;;;;;;;;;;;;;;;;;;;;;;;;:::::::::::::::::::cllodkOOOOOOOkdlc:cokOxdl:cdO00kdolccccccclodxkkOOOOOOO00OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO00000OOO0OOOOOOOOOOOkkkkxxxddooollllllllooodddddxxxkkkOOOOOkkkxxxxkkO    //
//    ,......'',;;::clllooooooolc:,'.............'''',,,,,,,;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::;;;;;;;:::::::::::::::::::cclodxkOOOOOOOOOkxlc:::lxOOkdl::cdO000kxoccccccccccclodxkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO0000000OOOOOOOOOOOkkkxxdddooollllllllooddddddddddxxxxkkkkOOOkkxxxxxkkO    //
//    ;......'',,;::cclllooooodddddolc:;'.............''',,,,,;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::::::::::::::::::::::::::::::clodxkOOOOOOOOOOOOOxlc::::cxOOOkdl:::cdO0000OxlcccccccccccccllodxkOOOOOOO0000OOO000000O00000000OOO000000000000000000000000OOOOOOkkxxdddoollllllloooddddddddddddddxxxxkkkkOOkkkxxxxxxk0    //
//    l.......',,;::ccllloooooddddddddddolc:;,'..........''',,,;;;;;;;;;;;;;;;;;::::::::::::::::::::::::::::::::::::::::lodxkkOOOOOOOOOOOOOOOxlc:::::cdkOOOkdl::::cxO00000OxolcccccccccccccccclodxkOOO00OOOO00000000000000000000000000000000000000000000OOOkkxxdooollllooddddddddddddddddddddxxxxkkkkkkkkkxxxxxxk0    //
//    d.......'',;;::clllloooodddddddddddddddoolc;,'.......'',,,;;;:::::::::::::::::::::::::::::::::::::::::;;;;;::clodxkOOOOOOOOOOOOOOOOOOxlc:::::;:okOOOOxdl:::::lk0000000OxocccccccccccccccccccclodxkOOOOOOOOO00OOO0000000OOO000000000000000OOOO000000OOkkxddoooooddddddddddddddddddddddddxxxxkkkkkkkkxxxxxxxkK    //
//    k'......'',,;::cclllooooooddddddddddddddddddolc:,'.....'',,,;;;;;;;::;;;;;;;;;;;;::;;:::;;;:::::::::::::clodxkOOOOOOOOOOOOOOOOOOOOOxoc:::::;;:lkOOOOOxdl::::;:lk00000000Oxocccccccccccccccccccc:cclodxkkOOOOOOOOOOOOOOOOOOOOOOOOOO000O000OOO00000000OOkxdddddddddddddddddddddddddddddddxxxxkkkkkkxxxxxxxxxkX    //
//    K;.......',,;::ccllloooooodddddddddddddddddddddddol::;'''',,;;;;;;;::::::::::::::::::::::::::::::::clodxkOOOOOOOOOOOOOOOOOOOOOOOOxoc:::::;;;:lxOOOOOOxdl:::::;:ok000000000Oxocccccccccccccccccccc::cccclodxkkOOOOOOOOOOOOOOOOOOOOO000OOOOOOO0000K0OkxdddddddddddddddddddddddddddddddddxxxxxxkkkxxxxxxxxxxxON    //
//    Nl.......'',;;::cclloooooooddddddddddddddddddddddddddoc:;;:;;;;;::::::::::::::::::::::::::::::ccloxkkOOOOOOOOOOOOOOOOOOOOOOOOOOxoc::::::::::cxOOOOOOOkdl:::::;;:oO000000000OOxocccccccccccccccccccc:::cccccllodxkkOOOOOOOOOOOOOOOOOO0OOOOOOOOkkkkxxdooodddddddddddddddddddddddddddddddxxxxxxkkxxxxxxdxxxxx0W    //
//    Wx........',,;::ccllloooooodddddddddddddddddddddddddolcclooooolcc::::::::::::::::::::::::cclodxkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOxoc:::::::::::cdOOOOOOOOkxl:::::;;:cdO00000000000Oxoccccccccccccccccccc::::ccccccccclodxkkOOOOOOOOOOOOOOOOOkxxdollodxkkxdddddddddddddddddddddddddddddddddxxxxxxxxxxxxxddxxxxkKM    //
//    MK;.......'',;;:ccclllooooooddddddddddddddddddddddolllloodxxkkkkxdoolc:::::::::::::::clodxkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOxoc::::;;;;::::cokOOOOOOOOkxo::::::;::cxO000000000000Oxolccccccccccccccccccc:::cccccccccccclodxkkOOOOOOOOkxdollcccclldxO00OxdddddddddddddddddddddddddddddddxxxxxxxxxxxxddddxxxONM    //
//    MNo.......'',,;::cclllloooooddddddddddddddddddddoollooodxxxkkkkkkOkkkxdollc:::::ccoddxkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOxoc::::;;;;;:::::okOOOOOOOOOkxo::::::;:::lx00000000000000Oxocccccccccccccccccccc::::ccc:ccccc:::cclodxkxxdolcccccclccllodk0KKOkxdddddddddddddddddddddddddddddxxxxxxxxxxxdddddxxx0WM    //
//    MMO'.......'',;;::ccllloooooododdddddddddddddddoooooddxxxkkkkkkkkkkOkkkkkkxollodxkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOxoc:::;;;;;;::;;::lkOOOOOOOOOOkxo::::::;;:::lk000000000000000Oxoccccccccccccccccccc::::::ccc:cc::::::::cldxdoollccccccclllodk0KKKOkxddodddddddddddddddddddddddxxxxxxxxxxxxddddxxxkXMM    //
//    MMXc.......'',,;;:cclllloooooooodddddddddddddoooooddxxxkkkkkkkkkkkkkOkkxdolclxOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOxoc:::;;;;;;;;;;;;:lxOOOOOOOOOOOkxo::::::;;::::ok0000000000000000Oxocccccccccccccccccccc::::ccccccc::::::::lkOOOkxdoolllccccllodk0KK0Oxddoodddddddddddddddddddddxxxxxxxxxxxddddddxx0WMM    //
//    MMWk'.......'',;;::ccllloooooooooddddddddddoooooddxxxkkkkkkkkkkkkkxdolc::;;cdOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOxoc::;;;;;;;;;;;;;::cdOOOOOOOOOOOOkxo::::::;;;::::oO00000000000000000Oxolccccccccccccccccccc:::::cccccccc::::cokOOOOOOOkxddollccllodk0KKKOkxddooddddddddddddddddddxxxxxxxxxxdddddddxkXMMM    //
//    MMMXc.......'',,;;::clllloooooooooddddddddooooddxxxkkkkkkkkkkkxdocc::;;::::dkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOxoc:;;;;;;;;;;;;;;;;;:dOOOOOOOOOOOOOkxo::::::;;;;;;::dO000000000000000000Oxolcccccccccccccccccc::::::cc::::cc:::cdOOOOOOOOOOOkkxddolllodk0KKKOkxdddddddddddddddddddxxxxxxxxxxddddddddxONMMM    //
//    MMMMk'.......'',;;::ccllllooooooooodddddoooodddxxkkkkkkkkxdolc:;;;;;;;;;;:okOOOkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOxoc:;;;;;;;;;;;;;;;;;;:okOOOOOOOOOOOOOkxo:::::::;;;;;::cdO0000000000000000000Okolcccccccccccccccccc::::::cc:ccccc::cdOOOOOOOOOOOOOOOkkxddoddkOKK0OkxdddddddddddddddddxxxxxxxxxdddddddddxXMMMM    //
//    MMMMNl. ......',,;;::cclllooooooooodddoooooddxxxkkkxxdolc:;;;;;;;;;;;;;;;lxOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOkxoc:;;;;;;;;;;;;;;;;;;;:lkOOOOOOOOOOOOOkkxo:::::::;;;;:;::cdO00000000O000O0000000Okdlccccccccccccc:cccc::::::ccccccccclxOOOOOOOOOOOOOOOOOkkkxxxxkOO0OkkxddoddddddddddddxxxxxxxxddddddddddOWMMMM    //
//    MMMMM0,.......'',,;;::ccllloooooooooooooooddxxddolc::;;;;;;;;;,,,,,;;;;;cdkOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOkxoc:;;;;;;;;;;;;;;;;;;;;;lxOOOOOOOOOOOOOkkkxo:::::::;;;;;;:::cxO000000OOO0OOOO0000000Okocccccccccccccccccccc:::::cccccccclxOOOkkkkkxxxxxxxxxxxxxxxxxkkkkkxddddoddddddddddxxxxxxxddddddddddkXMMMMM    //
//    MMMMMWd. ......'',,;::ccclllooooooolllloooolcc:;,,,,,,,,,,,,,,,,,,,,,,,:okkkkkOOOOOOOOOOOOOOOOOOOOOOOOOOkxoc:;;;;;,,;;;;;;;;;;;;;;;cdOOOOOOOOOOOOOOkkkxo:::::::;;::::::::lkO0000000OOOOOOOOO000000Okolccc::ccccccc:::cccc::::cccccc:clxkkkxxddddooooooooooooooodddxxxxddooooodddddddddxxxxddddddddddx0WMMMMM    //
//    MMMMMMXc........'',;;::cclllooollccccc::;;,''.''..'...........'''''''';lxxkkkkOOOOOOOOOOOOOOOOOOOOOOOOOxoc:;;;;;;,;;;;;;;;;;;;;;;;:dkOOOOOOOOOOOOOOkkkxo::::::;;;:::::::;:okO0000000OOOOOOOO00000OOOOkolcc::::cccccc::ccccc::::::cccccoxxxddollcccccc:::::::::cccclloodddddoooodddddddxxxdddddddddddONMMMMMM    //
//    MMMMMMMO,........',,;;::cclllllc:;;,''...............................':odxxkkkOOOOOOOOOOOOOOOOOOOOOOkxoc:;;;;;;,;;;;;;;;;;;;;;;;;:okOOOOOOOOOOOOOOOkkkxo:::;::;;;;;;;;::;::ok00000000000OOOOO0OO0OO0OOOkdlccc::::ccccc:::ccc::::::cccccoxxdollcc:::::::::::::::::::::clloddxxddddddddddddddddoodoooxXMMMMMMM    //
//    MMMMMMMWx. ......'',,;;::ccllc:;,''...........'................'''''',clodxkkkOOOOOOOOOkkOOOOOOOOOkxoc:;;;;;;,,;;;;;;;;;;;;;;;;;;lxOOOOOOOOOOOOOOOOkkkxo:::;::;;;;:;;;;;;;::oO000000000000OOOOOOOOOOOOOOOkdlccc::ccccccccc:::cccccccccccodddooooooooolloooooooooooooooooodddddxxxdddddddddddooooood0WMMMMMMM    //
//    MMMMMMMMNl. ......'',,;;:cccllcccccclllllllllolllllllllllllllllloollc:clodxxkkOOOOOOOOOOOOOOOOOOkxoc:;;;;,,,;;;;;;;;;;;,;;;;;;;;cxOOOOOOOOOOOOOOOOOkkkxo:::;;:;;;:::;;;;;;;;:dO000000000000OOOOOOOOOOOOOOOOkdlcccccccccccc:::ccccccllcccloddddddddddddddddddddddddddddddddddddddddddddddddooooooodONMMMMMMMM    //
//    MMMMMMMMMK:. ......'',,;:::ccllllooooooooodddddddddddddddddddddddddoc:clodxxkOOOOOOOOkkOOOOOkOkxoc:;;;;;,,,;;;;;;;;;;;;;;;;;;;;cdkOkkOOOOOOOOOOOOOOkkkxo:::;;:;;;::::;;;;;;;;cdOO000000000000OOOOOOOOOOOOOOOOkdlcccccccccccc:::cccloollccloddddddddddddddddddddddddddddddddddddddddddddddooooooookNMMMMMMMMM    //
//    MMMMMMMMMM0;........'',;;::cccllllooooooooodddddddddddddddddddddddol::clodxkkOOOOOkkOOOOOOkkkxoc:;;;;,,,;;;;;;;;;;;;;;;;;;;;;;:dkkOOkOOkOOOOOkOOOOOOkkko:::;;:;;;;:::;;;;;;;;;cxO00000000000000OOOOOOOOOOOOOOOOkdlccc:::::ccccccccloddollllodddddddoddddddddddddddddddddddddddddddddddddooooooooxXMMMMMMMMMM    //
//    MMMMMMMMMMWk' .......'',;;::ccclllllooooooooddddddddddddddddddddddlccclodxxkkOOOOOkOOOOOOkkxoc:;;;;;,,;;;;;;;;;;;;;;;;;;;;;;;:okkkkkOOOkkkOOkkkkOOkkkkko::;;;:;;;;:::;;;;;;;;;;lkO00O00000000000OOOOOOOOOOOOOOOOOkdlc:::::::cccccclodxdoollooddddoooodddddddddddddddddddddddddddddddddooooooooodKWMMMMMMMMMM    //
//    MMMMMMMMMMMWx. .......'',;;::ccclllllloooooooddddddddddddddddddddoccclodxxkkkOOOOkOOOOOOkxoc:;;;;,,,,;;;;;;;,,,;;;;;;;;;;;;;:lxkkkkOOOOOOOOOOkOOOOkkkkko:::;;;;;;;:::;;;;;;;;;;;lk0000OO0000000000OOOOOOOOOOOOOOOOOkdlc:::::::cccclodxxxdolloodddooddddddddddddddddddddddddddddddddoooooooooold0WMMMMMMMMMMM    //
//    MMMMMMMMMMMMNd. .......'',,;::ccclllllloooooooddddddddddddddddddocccloddxkkkkkkkOOOOkOkxoc:;;;;,,,,;;;;;;;;,,,,;;;;;;;;;;;;;lxkkkkkOOOOOOOOOOkOOOkkkOkko:::;;;;;;;:::;;;;;;;;;;;:oO0000O000000000000OOOOOOOOOOOOOOOOOkdlc::::::::ccloxxxdoolloodooodddddddddddddddddddddddddddddddooooooooolld0WMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMNd.  ......'',;;::ccclllllloooooooddddddddddddddddolccloodxxkkkkkkkkkkkkxoc:;;;;;;,,,;,;;;;;;,,,;;;;;;;;;;;;;;cdkkkkkkOOOOOkkkOOOOkkkkkkkko:::;;;;;;;::::;;;;;;;;;;;:dO000O0000000000000OOOOOOOOOOOOOOOOOOkdlc::::::::cloxkxdolllooooddddodddddddddddddddddddddddddoooooolllllloOWMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMNd. .......'',,;:::cccllllloooooooodddddddddddddolccllodxxkkkkkkkkkkkxoc:;;;;;,,;;;;;;;;;,;,,;;;;,,;;;;;;;;;:dkkkkkkkkOOOOkkkkkOkkOkkkkkkd:::;;;;;;;;:::;;;;;;;;;;;;cdOOOO000OOOO000000OOOOOOOOOOOOOOOOOOOOkdlc:::::::cldxkxdolllooddoddoodddddddddddddddddddoooooooooolllllloOWMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMNd.  ......'',,;;::ccclllooooooooooddddddddddddocccloddxkkkkkkkkkkxoc:;;;,,,,,;;;;;;;;;,,,;;;;,,,;;;;;;;;;:okkkkkkkkkkkOOkkkkkkkkkkkOkkko:::;;;;;;;;:::;;;;;;;;;;;;;cxOOOOOOOOOOO000OOOOOOOOOOOOOOOOOOOOOOOOkdlc::::::cldxkxdollloododdooddddddddddddddddddooooooooollllllloOWMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMNd.  ......'',,;;::ccclllloooooooooddddddddddolccloodxxkkkkkkkkxoc:;;;,,,,,,,;;;;;;;,;;;;;;,,,;;;;;;;;;;:lkkkOkkkkkkOOOOkkkkkOkkkkkkkkko::;;;;;;;;;::;;;;;;;;;;;;;;;lxOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOkdlc:::::cldxxxoolllodddddddddddddddddddddddoooooooollllllllo0WMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMWx'  .......'',;;::ccclllloooooooooddddddddolccloodxxkkkkkkkxoc:;;;,,,,,,,,,,,,,,,,;;;;;,,;;;;;;;;;;;:clxkkkkkkkkkkOOkOkkOkkOOkkkkOkkkd::;;;;;;;;;;;;;;;;;;;;;;;;;;:oddxkOOOOOOOOOOOOOOOOOOOOOkkkOOOOOOOOOOOOOkdlc:::ccldxxdolllooddodddoooddddddddoddoooooooollllllllld0WMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMWk,. .......'',;;:::ccclllooooooooddddddoolccllodxxkkkkkkxoc;;;;,,,,,,,,,,,,,,,,,,,,,,,;;;;;;;;:clodxdlokkkkkkkkkkkkOOkkOkkOOkkkkOOkkd::;;;;;;;;;:;;;;;;;;;;;;;;;:lxo::clodxkOOOOOOOOOOOkkkkkkkkkkkkkkOOOOOOOOOkdlc::ccodxxdollloododdoddddddooddooooooooooollllllllldKWMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMW0;. .......'',,;;::cccllloooooooodddodolcclloddxxkkkkxoc:;;;,,,,,,,,,,,,,,,,,,,,,,,,,;;;;:lodxkOOOxl::okkkkkkkkkkkkkkkkkkOOkkkkkkkkd:;;;;;;;;;;;;;;;;;;;;;;,;;:lxkkl:;;;;:clodxkOOOOkkkxxxddddddddxxxkkkkkkkOOOkdlc:ccodxxdolllooddodddddddooooooooooooolllllllcclxXMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMKc.  .......',,;;::cccllloooooooooooolcccloodxxkkkxdc:;;;,,,,,,,,,,,,'''''''''''',,;:lodkkOOOOOOkl:;:cdkkkkkkkkkkkkkkkkkkkkkkkkkkkd:;;;;;;;;;;;;;;;;;;;;;;,;;cxkkkxl;;;;;;::::cloddxxxdoolllclllloooddxxxkkkkkkkkdlcclodxxollllooooodddddoooooooooooolllllllccclkXMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMNd.  .......'',,;;::ccllloooooooooolcccloodxxkkxoc:;;,,,,,,,,,,''''''........'';:codkkOOOOOOOOko:;;;:cdkkkkkkkkkkkkkkkkkkkkkkkkkkdc::;;;;;;;;;;;;;;;;;;;;;;cdkkkkkxc;;;;;;;::::::::cloolc:::;;::::ccllooddxxxxkkkkdollodxdollllooodddddoooooooooollllllllccccoONMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMWk,. .......'',,;;::ccllloooooooolcccclodxxxxoc:;,,,,,,,,'''''''......'',;:c:::clodxkkOOOOOOkd:;;;;;;cdkkkkkkkkkkkkkkkkkkkkkkkkkdc::;;;;;;;;;;;;;;;;;;;;;:dkOOOkkkdc;;;;;;:::::::;;:odoolc:;;,,,,;;;::cclloodddxxkxdolodddollclooooooooooooooollllllcccccccd0WMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMWKc. ........'',;;::cccllloooooolcccloddxxoc;;,,,,''''''''......'',;:coooddl:;:codxkkOOOOOOdc;;;;;;;;cdkkkkkkkkkkkkkkkkkkkkkkkkdc::;;;;;;;;;;;;;;;;;;;;;okkkkkkkkkdc;;;;;:::::::::codddddoollc:;;,,,,,;;::ccllooddxxdooooollllloooooooooooolllllllcccccclxXMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMNd'. .......'',,;;::ccllllooolccclooddoc;,,,'''''''......'',;:cloooddddddl:;:clodxkkOOOOxc;;;;;;;;;;ldxxxkkkkkkkkkkkkkkkkkkkkdc:;;;;;;;;;;;;;;;;;;;,;lxkkkkkkkkkko:;;;;:::::::::lodddddddddddoolc::;,,,,,;;::ccllodddolllllllooooooooooollllllcccccccoONMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMW0:.  .......'',,;;::cclllllc:cclool:,,''''''.......',;:clodddddddddddddl;;:clodxkkOOOxl:;;;;;;;,;;;ldddxxxxxkkkkkkkkkkkkkkkdc:;;;;;;;;;;;;;;;;,,,;:oxxxxxkkkkkkxo:;;;:::::::::loddddddddddddddddoolc:;,,,,,;;;::clooollccccloooooooollllccccccccccxKWMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMNd'. ........'',;;:::cclcc:ccllc;,'''........',;:cloddddddddddddddddddl;;;:lodxkkOOko:;;;;;;,,,;;,,:looooddxxkkkkkkkkkkkkkdc:;;;;;;;;;;;;;;,,,,,;looooddxxxkkkkxl;;;:::cc::::codddddddddddddddddddddoolc:;,,,,,;;:cloolccccloooollllllccccccc:coONMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0c.  .......'',,;;:::c::::::,''.......',;:clooddddddddddddddddddddddl:;;:lodxkkOko:;;;;;;,,,,,,'',:ccclloddxxkkkkkkkkkkkdc;;;;;;;;;;;;;;,,,,',:ccccclloddxxxkkxc;;:::c:::::loddddddddddddddddddddddddddolc::;;,,,;:clllccclllllllcccccccc::cxXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNk,. ........'',,;;::::;;'.......',;:clooddddddddddddddddddddddddddo:;;:lodxkkkdc;;;;;;,,,,,''',:lc:;:cclodxxkkkkkkkkkkdc;;;;;;;;;;;;;;;,,',:ll:;;;::cloodxxxxdc;;::::::::loddddddddddddddddddddddddddddddooolc::;;:clllc:cllllcccccc:::co0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMXo'. ........'',,;;;,'....',;:cloooooodddddddddddddddddddddddddddo:;;:lodxkkdc;;;;;,,,,,,,,;coddo:;,;:clodxxkkkkkkkkkdc;;;;;;;;;;;;;;,,,,:oddoc:,,,;:cclodxxxdc;::::::::codddddddddddddddddddddddddddddddddddoollccclollcccccccc:::::lkNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0c.  ........',;,'...';:cclloooooooooooodddddddddddddddddddddddo:;;:codxkxl;;;;;,,,,',;:lodddddl:,,;:clodxxkkkkkkkkdc;;;;;;;;;;;;;;,,;:oddddooc;,,,;;:clodxxo:;:::::::loddddddddddddddddddddddddddddddooooooooooolllllllccc::::::cxKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNO:.  .......''..',;;::cccllllooooooooooooddddddddddddddddddddo:;;:codxxl:;;;,,,,'';:loddddddddl;,,;:clodxxkkkkkkkdc;;;;;;;;;;;;;;,;:oddddddddoc;,',;;:cloddo::::::::loddddddddddddddddddddddddddoooooooooooolllllcccccc::::::cd0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNk;.  ........''',;;;::cccllllooooooooooodddddddddddddddddddoc;;:clddl;;;,,,,',,:lodddddddddddl;',;:clodxxkkkkkkdc;;;;;;;;;;;;;;;:loddodddddddoc;,',,;:clodl:;:::::codddddddddddddddddddddddooooooooooooolllllccccc::::::::o0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNk;.  ........''',,;;:::ccllllloooooooooodddddddddddddddddoc;;:cool;;,,,,'',:loddddddddddddddl;',;:clodxkkkkkkdc;;;;;;;;;;;;;;:loddoddddddddddoc;,',,;:cooc;;;:::lodddddddddddddddooooooooooooooooolllllllcccc:::::::;:oONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNk;.  .........'',,;;:::ccclllllooooooooooooooooodddddddo:;;:cll:,,,,'',;loddddddddddddddddoc,',;:clodxxkkkkdc;;;;;;;;;;;;;;loddddddddddddddddoc;,',,;:ll:;;;::lodddddddddddddddooooooooooooollllllllccccc:::::;;;:oONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNk:.  .........'',,,;;:::cccllllooooooooooooooodddddddo:;;:cc;,,,',,:lodddddddddddddddddddoc,',;:clddxxkkkdc;;;;;;;;;,,;;codddddddddddddddddddoc;,',;:cc;,;;:loddddooooooodddooooooooooollllllllccccc:::::;;;;:o0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOc..  ........''',,;;;:::ccclllllooooooooooooodddddo:;;:c;''',,:looooddoddddddddddddddddo:,',;:coddxxkkdc;;;;;;;;;,,;codddoooddddddddddddddddoc;,,,;c:;,,;coddddoooooooooooooooooollllllllccccc:::::;;;;;cd0WMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMW0o'.  .........''',,;;;:::cccllllllooooooooooooodo:;;:;''',:lodddooooooooooddddddddddddo:,',;:coddxxxd:;;;;;;;;,,;codddddddddddddddddddddddddol:;,;::,,;coooooooooooooooooooolllllllcccccc:::::;;;;;;lxKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXx;.  ..........''',,;;;:::ccclllllloooooooooooo:;;,'',;lodddddddddooodddoooddddddddddl:'',;:loddxxd:;;;;;;;;,;:oodddddddddddddddddddddddddddolc:;:;,,:oooooooooooooooollllllllccccc:::::;;;;;;;:okXMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNOl'.  ..........''',,;;;:::ccccllllllooooooolc;,'';coddddddddddddddddooddddooooodoodl;',,;clodxxo:;;;;;;;;;:lodddddddddddddddddddddddddddodooolc:;,:oooooooooooollllllllccccc:::::;;;;;;,,;cd0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKx:..  ..........'',,,;;;::::ccccllllllooooc;,;coooodddddddddddddddddooddooooooooool;',,;clodxo:;;;;;;;;:loddddooddddddddddddooooooooooooooooolc::oooooooollllllllccccc:::::;;;;;;,,,,:oOXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0o,.  ...........''',,,;;;::::cccclllllolcclooooooooooddddooddddddddoooooooooooooc;',;:clodo:;::;;;;:lodddddddddddddooooooooooooooooooooooooollooolllllllllccccc:::::;;;;;;,,,,,;lxKWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNOl,.  ...........'''',,;;;;::::cccclllllloooooooooooooooooodddddoooooooooooooooc,',;:cool:;;;;;;:loddddddddoooooooooooooooooooooooooooooooollllllllcccccc:::::;;;;;;;,,,,,;cx0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOl,.  ............''',,,;;;;:::::ccccllllllllooooooooooooooooooooooooooooooooc,',;:lol:;;;;;;coooooooooooooooooooooooooooooooooolllllllllllccccccc:::::;;;;;;,,,,,,,;cd0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOo;.. .............''',,,,;;;;::::ccccccllllllllooooooooooooooooooooooooooo:,',;clc;,;;;;:looooooooooooooooooooooooollllllllllllllccccccc:::::::;;;;;,,,,,,,,,;lx0NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0d:'.  .............'''',,,,;;;;:::::cccccclllllllllllooooooooooooooooool:,,;:c:;,,,,:loooooooooooooooollllllllllllllllccccccccc:::::::;;;;;;,,,,,,,,'',:okKNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWKkl;..  ..............'''',,,,;;;;:::::::cccccclllllllllllllllllllloool;,,;::,,,,;clllllllllllllllllllllllllcccccccccc::::::::;;;;;;;,,,,,,,''''';cdOXWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN0xl,..  ..............''''',,,,,;;;;;:::::::cccccccccccllllllllllllc;,;;;,',,:llllllllllllccccccccccccccc:::::::::;;;;;;;;,,,,,,,,''''''',cokKNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWN0xl;... ................''''',,,,,,;;;;;;::::::::::ccccccccccccc:;;;;'',;ccccccccccccccccc:::::::::::;;;;;;;;;;,,,,,,,,,''''''''';cdk0NWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKko:,.. ...................''''',,,,,,,;;;;;;;;;;::::::::::::;;;;'',;::::::::::::::::;;;;;;;;;;;;,,,,,,,,,,,,'''''''''.',:ldOKNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0xl:,........................'''''''',,,,,,,,,,;;;;;;;;;;;;;,',;;;;;;;;;;;;;;;;,,,,,,,,,,,,,,,''''''''''''...',:ldk0NWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWX0koc;'............................''''''''''''',,,,,,,,,',,,,,,,,,,,,,,,'''''''''''''''''..........';cldkKNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNX0kdl:,...................................'..''''''''''''''''''''''....................',;coxk0XWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNKOkdlc;,................................................................',;:loxk0KNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXK0kxdol:;,''.........................................',,;:clddkO0KXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMWNXK0Oxdlc:;,,'......................',;:clodxk0KXNWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    //
//                                                                                                                                                                                                                                                                                                                    //
//                                                                                                                                                                                                                                                                                                                    //
//                                                                                                                                                                                                                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


contract sean is ERC721Creator {
    constructor() ERC721Creator("seanseallors", "sean") {}
}


// File: node_modules/@openzeppelin/contracts/proxy/Proxy.sol
// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)

pragma solidity ^0.8.0;

/**
 * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM
 * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to
 * be specified by overriding the virtual {_implementation} function.
 *
 * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a
 * different contract through the {_delegate} function.
 *
 * The success and return data of the delegated call will be returned back to the caller of the proxy.
 */
abstract contract Proxy {
    /**
     * @dev Delegates the current call to `implementation`.
     *
     * This function does not return to its internal call site, it will return directly to the external caller.
     */
    function _delegate(address implementation) internal virtual {
        assembly {
            // Copy msg.data. We take full control of memory in this inline assembly
            // block because it will not return to Solidity code. We overwrite the
            // Solidity scratch pad at memory position 0.
            calldatacopy(0, 0, calldatasize())

            // Call the implementation.
            // out and outsize are 0 because we don't know the size yet.
            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)

            // Copy the returned data.
            returndatacopy(0, 0, returndatasize())

            switch result
            // delegatecall returns 0 on error.
            case 0 {
                revert(0, returndatasize())
            }
            default {
                return(0, returndatasize())
            }
        }
    }

    /**
     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function
     * and {_fallback} should delegate.
     */
    function _implementation() internal view virtual returns (address);

    /**
     * @dev Delegates the current call to the address returned by `_implementation()`.
     *
     * This function does not return to its internal call site, it will return directly to the external caller.
     */
    function _fallback() internal virtual {
        _beforeFallback();
        _delegate(_implementation());
    }

    /**
     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other
     * function in the contract matches the call data.
     */
    fallback() external payable virtual {
        _fallback();
    }

    /**
     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data
     * is empty.
     */
    receive() external payable virtual {
        _fallback();
    }

    /**
     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`
     * call, or as part of the Solidity `fallback` or `receive` functions.
     *
     * If overridden should call `super._beforeFallback()`.
     */
    function _beforeFallback() internal virtual {}
}


// File: node_modules/@openzeppelin/contracts/utils/Address.sol
// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)

pragma solidity ^0.8.1;

/**
 * @dev Collection of functions related to the address type
 */
library Address {
    /**
     * @dev Returns true if `account` is a contract.
     *
     * [IMPORTANT]
     * ====
     * It is unsafe to assume that an address for which this function returns
     * false is an externally-owned account (EOA) and not a contract.
     *
     * Among others, `isContract` will return false for the following
     * types of addresses:
     *
     *  - an externally-owned account
     *  - a contract in construction
     *  - an address where a contract will be created
     *  - an address where a contract lived, but was destroyed
     *
     * Furthermore, `isContract` will also return true if the target contract within
     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,
     * which only has an effect at the end of a transaction.
     * ====
     *
     * [IMPORTANT]
     * ====
     * You shouldn't rely on `isContract` to protect against flash loan attacks!
     *
     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets
     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract
     * constructor.
     * ====
     */
    function isContract(address account) internal view returns (bool) {
        // This method relies on extcodesize/address.code.length, which returns 0
        // for contracts in construction, since the code is only stored at the end
        // of the constructor execution.

        return account.code.length > 0;
    }

    /**
     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to
     * `recipient`, forwarding all available gas and reverting on errors.
     *
     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost
     * of certain opcodes, possibly making contracts go over the 2300 gas limit
     * imposed by `transfer`, making them unable to receive funds via
     * `transfer`. {sendValue} removes this limitation.
     *
     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].
     *
     * IMPORTANT: because control is transferred to `recipient`, care must be
     * taken to not create reentrancy vulnerabilities. Consider using
     * {ReentrancyGuard} or the
     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].
     */
    function sendValue(address payable recipient, uint256 amount) internal {
        require(address(this).balance >= amount, "Address: insufficient balance");

        (bool success, ) = recipient.call{value: amount}("");
        require(success, "Address: unable to send value, recipient may have reverted");
    }

    /**
     * @dev Performs a Solidity function call using a low level `call`. A
     * plain `call` is an unsafe replacement for a function call: use this
     * function instead.
     *
     * If `target` reverts with a revert reason, it is bubbled up by this
     * function (like regular Solidity function calls).
     *
     * Returns the raw returned data. To convert to the expected return value,
     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].
     *
     * Requirements:
     *
     * - `target` must be a contract.
     * - calling `target` with `data` must not revert.
     *
     * _Available since v3.1._
     */
    function functionCall(address target, bytes memory data) internal returns (bytes memory) {
        return functionCallWithValue(target, data, 0, "Address: low-level call failed");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with
     * `errorMessage` as a fallback revert reason when `target` reverts.
     *
     * _Available since v3.1._
     */
    function functionCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal returns (bytes memory) {
        return functionCallWithValue(target, data, 0, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],
     * but also transferring `value` wei to `target`.
     *
     * Requirements:
     *
     * - the calling contract must have an ETH balance of at least `value`.
     * - the called Solidity function must be `payable`.
     *
     * _Available since v3.1._
     */
    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {
        return functionCallWithValue(target, data, value, "Address: low-level call with value failed");
    }

    /**
     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but
     * with `errorMessage` as a fallback revert reason when `target` reverts.
     *
     * _Available since v3.1._
     */
    function functionCallWithValue(
        address target,
        bytes memory data,
        uint256 value,
        string memory errorMessage
    ) internal returns (bytes memory) {
        require(address(this).balance >= value, "Address: insufficient balance for call");
        (bool success, bytes memory returndata) = target.call{value: value}(data);
        return verifyCallResultFromTarget(target, success, returndata, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],
     * but performing a static call.
     *
     * _Available since v3.3._
     */
    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {
        return functionStaticCall(target, data, "Address: low-level static call failed");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],
     * but performing a static call.
     *
     * _Available since v3.3._
     */
    function functionStaticCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal view returns (bytes memory) {
        (bool success, bytes memory returndata) = target.staticcall(data);
        return verifyCallResultFromTarget(target, success, returndata, errorMessage);
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],
     * but performing a delegate call.
     *
     * _Available since v3.4._
     */
    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {
        return functionDelegateCall(target, data, "Address: low-level delegate call failed");
    }

    /**
     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],
     * but performing a delegate call.
     *
     * _Available since v3.4._
     */
    function functionDelegateCall(
        address target,
        bytes memory data,
        string memory errorMessage
    ) internal returns (bytes memory) {
        (bool success, bytes memory returndata) = target.delegatecall(data);
        return verifyCallResultFromTarget(target, success, returndata, errorMessage);
    }

    /**
     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling
     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.
     *
     * _Available since v4.8._
     */
    function verifyCallResultFromTarget(
        address target,
        bool success,
        bytes memory returndata,
        string memory errorMessage
    ) internal view returns (bytes memory) {
        if (success) {
            if (returndata.length == 0) {
                // only check isContract if the call was successful and the return data is empty
                // otherwise we already know that it was a contract
                require(isContract(target), "Address: call to non-contract");
            }
            return returndata;
        } else {
            _revert(returndata, errorMessage);
        }
    }

    /**
     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the
     * revert reason or using the provided one.
     *
     * _Available since v4.3._
     */
    function verifyCallResult(
        bool success,
        bytes memory returndata,
        string memory errorMessage
    ) internal pure returns (bytes memory) {
        if (success) {
            return returndata;
        } else {
            _revert(returndata, errorMessage);
        }
    }

    function _revert(bytes memory returndata, string memory errorMessage) private pure {
        // Look for revert reason and bubble it up if present
        if (returndata.length > 0) {
            // The easiest way to bubble the revert reason is using memory via assembly
            /// @solidity memory-safe-assembly
            assembly {
                let returndata_size := mload(returndata)
                revert(add(32, returndata), returndata_size)
            }
        } else {
            revert(errorMessage);
        }
    }
}


// File: node_modules/@openzeppelin/contracts/utils/StorageSlot.sol
// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)
// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.

pragma solidity ^0.8.0;

/**
 * @dev Library for reading and writing primitive types to specific storage slots.
 *
 * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.
 * This library helps with reading and writing to such slots without the need for inline assembly.
 *
 * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.
 *
 * Example usage to set ERC1967 implementation slot:
 * ```solidity
 * contract ERC1967 {
 *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;
 *
 *     function _getImplementation() internal view returns (address) {
 *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;
 *     }
 *
 *     function _setImplementation(address newImplementation) internal {
 *         require(Address.isContract(newImplementation), "ERC1967: new implementation is not a contract");
 *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;
 *     }
 * }
 * ```
 *
 * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._
 * _Available since v4.9 for `string`, `bytes`._
 */
library StorageSlot {
    struct AddressSlot {
        address value;
    }

    struct BooleanSlot {
        bool value;
    }

    struct Bytes32Slot {
        bytes32 value;
    }

    struct Uint256Slot {
        uint256 value;
    }

    struct StringSlot {
        string value;
    }

    struct BytesSlot {
        bytes value;
    }

    /**
     * @dev Returns an `AddressSlot` with member `value` located at `slot`.
     */
    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {
        /// @solidity memory-safe-assembly
        assembly {
            r.slot := slot
        }
    }

    /**
     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.
     */
    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {
        /// @solidity memory-safe-assembly
        assembly {
            r.slot := slot
        }
    }

    /**
     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.
     */
    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {
        /// @solidity memory-safe-assembly
        assembly {
            r.slot := slot
        }
    }

    /**
     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.
     */
    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {
        /// @solidity memory-safe-assembly
        assembly {
            r.slot := slot
        }
    }

    /**
     * @dev Returns an `StringSlot` with member `value` located at `slot`.
     */
    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {
        /// @solidity memory-safe-assembly
        assembly {
            r.slot := slot
        }
    }

    /**
     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.
     */
    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {
        /// @solidity memory-safe-assembly
        assembly {
            r.slot := store.slot
        }
    }

    /**
     * @dev Returns an `BytesSlot` with member `value` located at `slot`.
     */
    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {
        /// @solidity memory-safe-assembly
        assembly {
            r.slot := slot
        }
    }

    /**
     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.
     */
    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {
        /// @solidity memory-safe-assembly
        assembly {
            r.slot := store.slot
        }
    }
}

